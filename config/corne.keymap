/*
 * Alan's Corne ZMK config
 * 
 * Originally created for QMK by Mark Stosberg (@markstos)
 * Adapted for ZMK by Micha≈Ç Minarowski (@n3oney)
 * 
 * SPDX-License-Identifier: GPL-2.0-or-later
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    combos {
        compatible = "zmk,combos";

        jk_esc {
            bindings = <&kp ESCAPE>;
            key-positions = <19 20>;
        };
    };

    behaviors {
        hrm_l: hrm_l {
            compatible = "zmk,behavior-hold-tap";
            label = "HRM_L";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            require-prior-idle-ms = <150>;
            flavor = "balanced";
            hold-trigger-on-release;
            hold-trigger-key-positions = <6 7 8 9 10 11 18 19 20 21 22 23 30 31 32 33 34 35 39 40 41>;
        };

        hrm_r: hrm_r {
            compatible = "zmk,behavior-hold-tap";
            label = "HRM_R";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            require-prior-idle-ms = <150>;
            flavor = "balanced";
            hold-trigger-key-positions = <0 1 2 3 4 5 12 13 14 15 16 17 24 25 26 27 28 29 36 37 38>;
            hold-trigger-on-release;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp GRAVE     &kp Q              &kp W              &kp F                  &kp P                &kp B        &kp J      &kp L                 &kp U                       &kp Y                   &kp SQT                &kp DELETE
&kp CAPSLOCK  &kp A              &kp R              &kp S                  &kp T                &kp G        &kp M      &kp N                 &kp E                       &kp I                   &kp O                  &trans
&trans        &hrm_l LEFT_GUI Z  &hrm_l LEFT_ALT X  &hrm_l LEFT_CONTROL C  &hrm_l LEFT_SHIFT D  &kp V        &kp K      &hrm_r RIGHT_SHIFT H  &hrm_r RIGHT_CONTROL COMMA  &hrm_r LEFT_ALT PERIOD  &hrm_r RIGHT_GUI FSLH  &trans
                                                    &mo 3                  &kp SPACE            &lt 1 TAB    &lt 4 RET  &kp BACKSPACE         &mo 2
            >;
        };

        num_layer {
            bindings = <
&trans  &trans    &trans    &trans     &trans     &trans    &kp EQUAL      &kp N7  &kp N8        &kp N9  &kp PLUS    &kp SLASH
&trans  &trans    &trans    &trans     &trans     &trans    &kp COLON      &kp N4  &kp N5        &kp N6  &kp MINUS   &kp ASTERISK
&trans  &kp LGUI  &kp LALT  &kp LCTRL  &kp LSHFT  &trans    &kp SEMICOLON  &kp N1  &kp N2        &kp N3  &kp PERIOD  &kp COMMA
                            &trans     &trans     &trans    &trans         &trans  &kp NUMBER_0
            >;
        };

        sym_layer {
            bindings = <
&trans  &kp AT_SIGN      &kp LESS_THAN  &kp GREATER_THAN  &kp DOLLAR     &kp HASH       &kp AMPERSAND  &kp LEFT_BRACKET      &kp RIGHT_BRACKET      &kp COLON       &kp DOUBLE_QUOTES  &trans
&trans  &kp EXCLAMATION  &kp MINUS      &kp PLUS          &kp EQUAL      &kp CARET      &kp PIPE       &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp SEMICOLON   &kp QUESTION       &trans
&trans  &trans           &kp SLASH      &kp ASTERISK      &kp BACKSLASH  &kp PERCENT    &kp TILDE      &kp LEFT_BRACE        &kp RIGHT_BRACE        &kp UNDERSCORE  &trans             &trans
                                        &trans            &trans         &trans         &trans         &trans                &trans
            >;
        };

        nav_layer {
            bindings = <
&bt BT_CLR  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &trans    &kp K_UNDO  &kp K_CUT      &kp K_COPY   &kp K_PASTE  &kp K_REDO  &trans
&trans      &trans        &trans        &trans        &trans        &trans    &kp LEFT    &kp DOWN       &kp UP       &kp RIGHT    &trans      &trans
&trans      &kp LGUI      &kp LALT      &kp LCTRL     &kp LSHFT     &trans    &kp HOME    &kp PAGE_DOWN  &kp PAGE_UP  &kp END      &trans      &trans
                                        &trans        &trans        &trans    &trans      &trans         &trans
            >;
        };

        fn_layer {
            bindings = <
&trans  &kp F12  &kp F7  &kp F8  &kp F9  &trans             &trans          &kp C_MUTE         &kp C_PLAY_PAUSE  &trans      &trans    &trans
&trans  &kp F11  &kp F4  &kp F5  &kp F7  &kp PRINTSCREEN    &kp C_PREVIOUS  &kp C_VOLUME_DOWN  &kp C_VOLUME_UP   &kp C_NEXT  &trans    &trans
&trans  &kp F10  &kp F1  &kp F2  &kp F3  &trans             &trans          &kp RSHFT          &kp RCTRL         &kp LALT    &kp RGUI  &trans
                         &trans  &trans  &trans             &trans          &trans             &trans
            >;
        };
    };

    conditional_layers { compatible = "zmk,conditional-layers"; };
};
